// <auto-generated />
using System;
using MasterChef.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Sale.Persistence.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221215235345_FirstMigration")]
    partial class FirstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Sale.Domain.Models.Estoque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ind_Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("Nm_Quantidade")
                        .HasColumnType("int");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ESTOQUE");
                });

            modelBuilder.Entity("Sale.Domain.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Alterado_Por_Usu_Id")
                        .HasColumnType("int");

                    b.Property<int>("Criado_Por_Usu_Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Dat_Alteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Dat_Criacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Dat_Exclusao")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Excluido_Por_Usu_Id")
                        .HasColumnType("int");

                    b.Property<bool>("Ind_Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("PRODUTOS");
                });

            modelBuilder.Entity("Sale.Domain.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Alterado_Por_Usu_Id")
                        .HasColumnType("int");

                    b.Property<int>("Criado_Por_Usu_Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Dat_Alteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Dat_Criacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Dat_Exclusao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Dat_Nascimento")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Excluido_Por_Usu_Id")
                        .HasColumnType("int");

                    b.Property<bool>("Ind_Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("USUARIOS");
                });

            modelBuilder.Entity("Sale.Domain.Models.Venda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Alterado_Por_Usu_Id")
                        .HasColumnType("int");

                    b.Property<int>("Criado_Por_Usu_Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Dat_Alteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Dat_Criacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Dat_Exclusao")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Excluido_Por_Usu_Id")
                        .HasColumnType("int");

                    b.Property<bool>("Ind_Ativo")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("VENDAS");
                });

            modelBuilder.Entity("Sale.Domain.Models.Vendas_Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Alterado_Por_Usu_Id")
                        .HasColumnType("int");

                    b.Property<int>("Criado_Por_Usu_Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Dat_Alteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Dat_Criacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Dat_Exclusao")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Desconto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Excluido_Por_Usu_Id")
                        .HasColumnType("int");

                    b.Property<bool>("Ind_Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Valor_Final")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("VendaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("VendaId");

                    b.ToTable("VENDAS_PRODUTOS");
                });

            modelBuilder.Entity("Sale.Domain.Models.Estoque", b =>
                {
                    b.HasOne("Sale.Domain.Models.Produto", null)
                        .WithMany("Estoque")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sale.Domain.Models.Vendas_Produto", b =>
                {
                    b.HasOne("Sale.Domain.Models.Produto", null)
                        .WithMany("Vendas_Produto")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sale.Domain.Models.Venda", null)
                        .WithMany("Vendas_Produtos")
                        .HasForeignKey("VendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sale.Domain.Models.Produto", b =>
                {
                    b.Navigation("Estoque");

                    b.Navigation("Vendas_Produto");
                });

            modelBuilder.Entity("Sale.Domain.Models.Venda", b =>
                {
                    b.Navigation("Vendas_Produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
